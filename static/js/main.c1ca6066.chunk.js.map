{"version":3,"sources":["components/Square.js","components/Board.js","components/Cell.js","components/SlidingPuzzleSolver.js","components/App.js","index.js"],"names":["squareStyle","background","border","float","fontSize","fontWeight","lineHeight","height","margin","padding","textAlign","width","display","position","holeStyle","opacity","Square","motionStyle","translateX","spring","this","props","visualPosition","x","translateY","y","style","value","WebkitTransform","transform","onClick","React","Component","Board","squares","length","col","i","j","rows","push","renderSquare","board","clear","content","size","tiles","Cell","pos","number","back","solved","f","Number","MAX_SAFE_INTEGER","SlidingPuzzleSolver","arr","history","_","cloneDeep","solvedArr","prepareSolved","cellArr","preparePuzzleSolver","prototype","Array","fill","arrCell","findNumber","solve","solveTop","solveLeft","solveSmallPuzzle","row","solveNumber","swapNumber","loop","blank","swapWith","isEqual","target","nearest","blankCell","numberCell","blankTarget","dx","dy","vx","vy","isValid","manhattanDistance","blankPath","aStar","ROW","COL","p1","p2","Math","abs","targetCell","ignore","openList","currentCell","pop","includes","sort","a","b","result","reverse","x1","y1","x2","y2","App","state","map","slice","stepNumber","counter","interval","temp","shuffle","bind","solvePuzzle","clearInterval","step","setState","current","hole","newarr","clone","concat","numbers","range","invCount","n","h","console","log","setInterval","jumpTo","e","key","button","className","swap","type","onChange","handleStepNumberInput","onKeyPress","moves","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1ca6066.chunk.js","sourcesContent":["import \"../index.css\";\r\nimport React from \"react\";\r\nimport { spring, Motion } from \"react-motion\";\r\n\r\nconst squareStyle = {\r\n  background: \"#fff\",\r\n  border: \"1px solid #999\",\r\n  float: \"left\",\r\n  fontSize: \"24px\",\r\n  fontWeight: \"bold\",\r\n  lineHeight: \"34px\",\r\n  height: \"34px\",\r\n  margin: \"-1px -1px\",\r\n  padding: \"0\",\r\n  textAlign: \"center\",\r\n  width: \"34px\",\r\n  display: \"block\",\r\n  position: \"absolute\",\r\n};\r\n\r\nconst holeStyle = {\r\n  border: \"1px solid #999\",\r\n  opacity: 0,\r\n};\r\n\r\nclass Square extends React.Component {\r\n  render() {\r\n    const motionStyle = {\r\n      translateX: spring(this.props.visualPosition.x),\r\n      translateY: spring(this.props.visualPosition.y),\r\n    };\r\n    const style = {\r\n      ...squareStyle,\r\n      ...(this.props.value === 0 ? holeStyle : {}),\r\n    };\r\n    return (\r\n      <Motion style={motionStyle}>\r\n        {({ translateX, translateY }) => (\r\n          <button\r\n            style={{\r\n              ...style,\r\n              WebkitTransform: `translate3d(${translateX}px, ${translateY}px,0)`,\r\n              transform: `translate3d(${translateX}px, ${translateY}px,0)`,\r\n            }}\r\n            onClick={this.props.onClick}\r\n          >\r\n            {this.props.value}\r\n          </button>\r\n        )}\r\n      </Motion>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Square;\r\n","import \"../index.css\";\r\nimport React from \"react\";\r\nimport Square from \"./Square\";\r\n\r\nclass Board extends React.Component {\r\n  tiles() {\r\n    let width = this.props.squares.length;\r\n    let col = this.props.squares.length;\r\n    let i = 0;\r\n    let j = 0;\r\n    var rows = [];\r\n    for (let x = 0; x < width * col; x++) {\r\n      if (this.props.squares[i][j] === null) {\r\n        return <div>Loading</div>;\r\n      }\r\n      rows.push(this.renderSquare(i, j));\r\n      j++;\r\n      if (j === width) {\r\n        j = 0;\r\n        i++;\r\n      }\r\n    }\r\n    return rows;\r\n  }\r\n  renderSquare(i, j) {\r\n    let visualPosition = {\r\n      x: 2 + j * 33,\r\n      y: 2 + i * 33,\r\n    };\r\n    return (\r\n      <Square\r\n        value={this.props.squares[i][j]}\r\n        visualPosition={visualPosition}\r\n        onClick={() => this.props.onClick(i, j)}\r\n        key={this.props.squares[i][j]}\r\n      />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const board = {\r\n      clear: \"both\",\r\n      content: \"\",\r\n      display: \"table\",\r\n      border: \"2px solid #999\",\r\n      padding: 16.5 * this.props.size + \"px\",\r\n    };\r\n    return (\r\n      <div>\r\n        {this.tiles()}\r\n        <div style={board}></div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Board;\r\n","export class Cell {\r\n  constructor(\r\n    pos = { x: -1, y: -1 },\r\n    number,\r\n    back = { x: -1, y: -1 },\r\n    solved = false,\r\n    f = Number.MAX_SAFE_INTEGER\r\n  ) {\r\n    this.pos = pos;\r\n    this.number = number;\r\n    this.back = back;\r\n    this.solved = solved;\r\n    this.f = f;\r\n  }\r\n}\r\n","import _ from \"lodash\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class SlidingPuzzleSolver {\r\n  constructor(arr, size, history) {\r\n    this.history = _.cloneDeep(history);\r\n    this.arr = _.cloneDeep(arr);\r\n    this.size = size;\r\n    this.solvedArr = this.prepareSolved(this.size);\r\n    this.cellArr = this.preparePuzzleSolver(this.arr);\r\n  }\r\n}\r\n\r\nSlidingPuzzleSolver.prototype.prepareSolved = function (size) {\r\n  var solvedArr = new Array(size).fill(null);\r\n  var number = 1;\r\n  for (var i = 0; i < size; i++) {\r\n    solvedArr[i] = new Array(size).fill(null);\r\n    for (var j = 0; j < size; j++) {\r\n      solvedArr[i][j] = number;\r\n      number++;\r\n    }\r\n  }\r\n  solvedArr[size - 1][size - 1] = 0;\r\n  return _.cloneDeep(solvedArr);\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.preparePuzzleSolver = function (arr) {\r\n  // const step = this.state.stepNumber;\r\n  // const arr = _.cloneDeep(this.state.history[step].squares);\r\n  var arrCell = new Array(this.size).fill(null);\r\n  for (var i = 0; i < this.size; i++) {\r\n    arrCell[i] = new Array(this.size).fill(null);\r\n    for (var j = 0; j < this.size; j++) {\r\n      arrCell[i][j] = new Cell({ x: j, y: i }, arr[i][j]);\r\n    }\r\n  }\r\n  return _.cloneDeep(arrCell);\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.findNumber = function (number) {\r\n  for (var i = 0; i < this.cellArr.length; i++) {\r\n    for (var j = 0; j < this.cellArr.length; j++) {\r\n      if (this.cellArr[i][j].number === number) {\r\n        return _.cloneDeep(this.cellArr[i][j]);\r\n      }\r\n    }\r\n  }\r\n  return new Cell();\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.solve = function () {\r\n  for (let i = 0; i < this.size - 2; i++) {\r\n    this.solveTop(i);\r\n    this.solveLeft(i);\r\n  }\r\n  if (!this.solveSmallPuzzle()) return null;\r\n  return _.cloneDeep(this.history);\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.solveTop = function (row) {\r\n  for (let i = 0; i < this.size - 2; i++) {\r\n    if (this.cellArr[row][i].solved) {\r\n      continue;\r\n    }\r\n    this.solveNumber(this.solvedArr[row][i], { x: i, y: row });\r\n    this.cellArr[row][i].solved = true;\r\n  }\r\n\r\n  this.solveNumber(this.solvedArr[row][this.size - 1], {\r\n    x: this.size - 1,\r\n    y: row + 2,\r\n  });\r\n  this.solveNumber(this.solvedArr[row][this.size - 2], {\r\n    x: this.size - 2,\r\n    y: row + 2,\r\n  });\r\n  this.solveNumber(this.solvedArr[row][this.size - 2], {\r\n    x: this.size - 1,\r\n    y: row,\r\n  });\r\n  this.cellArr[row][this.size - 1].solved = true;\r\n\r\n  this.solveNumber(this.solvedArr[row][this.size - 1], {\r\n    x: this.size - 1,\r\n    y: row + 1,\r\n  });\r\n  this.cellArr[row + 1][this.size - 1].solved = true;\r\n\r\n  this.solveNumber(this.solvedArr[this.size - 1][this.size - 1], {\r\n    x: this.size - 2,\r\n    y: row,\r\n  });\r\n  this.cellArr[row][this.size - 1].solved = false;\r\n  this.cellArr[row + 1][this.size - 1].solved = false;\r\n\r\n  this.swapNumber(this.size - 2, row, this.size - 1, row);\r\n  this.swapNumber(this.size - 1, row, this.size - 1, row + 1);\r\n  this.cellArr[row][this.size - 2].solved = true;\r\n  this.cellArr[row][this.size - 1].solved = true;\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.solveLeft = function (col) {\r\n  for (let i = 0; i < this.size - 2; i++) {\r\n    if (this.cellArr[i][col].solved) {\r\n      continue;\r\n    }\r\n    this.solveNumber(this.solvedArr[i][col], { x: col, y: i });\r\n    this.cellArr[i][col].solved = true;\r\n  }\r\n\r\n  this.solveNumber(this.solvedArr[this.size - 1][col], {\r\n    x: col + 2,\r\n    y: this.size - 1,\r\n  });\r\n  this.solveNumber(this.solvedArr[this.size - 2][col], {\r\n    x: col + 2,\r\n    y: this.size - 2,\r\n  });\r\n  this.solveNumber(this.solvedArr[this.size - 2][col], {\r\n    x: col,\r\n    y: this.size - 1,\r\n  });\r\n  this.cellArr[this.size - 1][col].solved = true;\r\n\r\n  this.solveNumber(this.solvedArr[this.size - 1][col], {\r\n    x: col + 1,\r\n    y: this.size - 1,\r\n  });\r\n  this.cellArr[this.size - 1][col + 1].solved = true;\r\n\r\n  this.solveNumber(this.solvedArr[this.size - 1][this.size - 1], {\r\n    x: col,\r\n    y: this.size - 2,\r\n  });\r\n  this.cellArr[this.size - 1][col].solved = false;\r\n  this.cellArr[this.size - 1][col + 1].solved = false;\r\n\r\n  this.swapNumber(col, this.size - 2, col, this.size - 1);\r\n  this.swapNumber(col, this.size - 1, col + 1, this.size - 1);\r\n  this.cellArr[this.size - 2][col].solved = true;\r\n  this.cellArr[this.size - 1][col].solved = true;\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.solveSmallPuzzle = function () {\r\n  var loop = 0;\r\n  var blank = this.findNumber(0);\r\n  var swapWith = new Cell();\r\n  while (!_.isEqual(this.solvedArr, this.arr)) {\r\n    blank = this.findNumber(0);\r\n    swapWith = new Cell();\r\n    if (loop < 12) {\r\n      if (blank.pos.y === this.size - 2 && blank.pos.x === this.size - 2)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 1][this.size - 2]);\r\n      if (blank.pos.y === this.size - 1 && blank.pos.x === this.size - 2)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 1][this.size - 1]);\r\n      if (blank.pos.y === this.size - 1 && blank.pos.x === this.size - 1)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 2][this.size - 1]);\r\n      if (blank.pos.y === this.size - 2 && blank.pos.x === this.size - 1)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 2][this.size - 2]);\r\n    } else {\r\n      if (blank.pos.y === this.size - 1 && blank.pos.x === this.size - 2)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 1][this.size - 3]);\r\n      if (blank.pos.y === this.size - 1 && blank.pos.x === this.size - 3)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 2][this.size - 1]);\r\n      if (blank.pos.y === this.size - 2 && blank.pos.x === this.size - 3)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 2][this.size - 2]);\r\n      if (blank.pos.y === this.size - 2 && blank.pos.x === this.size - 2)\r\n        swapWith = _.cloneDeep(this.cellArr[this.size - 1][this.size - 2]);\r\n    }\r\n    loop++;\r\n    this.swapNumber(blank.pos.x, blank.pos.y, swapWith.pos.x, swapWith.pos.y);\r\n  }\r\n  if (_.isEqual(this.solvedArr, this.arr)) return true;\r\n  return false;\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.solveNumber = function (number, target) {\r\n  var nearest = Number.MAX_SAFE_INTEGER;\r\n  while (this.cellArr[target.y][target.x].number !== number) {\r\n    var blankCell = this.findNumber(0);\r\n    var numberCell = this.findNumber(number);\r\n\r\n    var blankTarget = new Cell();\r\n    var x = numberCell.pos.x;\r\n    var y = numberCell.pos.y;\r\n    const dx = [0, 0, -1, 1];\r\n    const dy = [-1, 1, 0, 0];\r\n    nearest = Number.MAX_SAFE_INTEGER;\r\n    var vx = 0;\r\n    var vy = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      vx = x + dx[i];\r\n      vy = y + dy[i];\r\n      if (\r\n        this.isValid(this.size, this.size, vy, vx) &&\r\n        !this.cellArr[vy][vx].solved &&\r\n        nearest > this.manhattanDistance(this.cellArr[vy][vx].pos, target)\r\n      ) {\r\n        blankTarget = this.cellArr[vy][vx];\r\n        nearest = this.manhattanDistance(this.cellArr[vy][vx].pos, target);\r\n      }\r\n    }\r\n    const blankPath = this.aStar(blankTarget, blankCell, numberCell, null);\r\n    for (let i = 0; i < blankPath.length; i++) {\r\n      this.swapNumber(\r\n        blankPath[i].pos.x,\r\n        blankPath[i].pos.y,\r\n        blankCell.pos.x,\r\n        blankCell.pos.y\r\n      );\r\n      blankCell = this.cellArr[blankPath[i].pos.y][blankPath[i].pos.x];\r\n    }\r\n    if (number !== 0) {\r\n      this.swapNumber(\r\n        blankTarget.pos.x,\r\n        blankTarget.pos.y,\r\n        numberCell.pos.x,\r\n        numberCell.pos.y\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.isValid = function (ROW, COL, row, col) {\r\n  return row >= 0 && row < ROW && col >= 0 && col < COL;\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.manhattanDistance = function (p1, p2) {\r\n  return Math.abs(p1.y - p2.y) + Math.abs(p1.x - p2.x);\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.aStar = function (\r\n  targetCell,\r\n  blankCell,\r\n  numberCell,\r\n  ignore\r\n) {\r\n  if (\r\n    typeof ignore === \"object\" ||\r\n    typeof ignore === \"undefined\" ||\r\n    ignore.length === 0\r\n  ) {\r\n    ignore = new Array(1).fill(null);\r\n  }\r\n  this.cellArr[blankCell.pos.y][blankCell.pos.x].f = 0;\r\n  var openList = [];\r\n  openList.push(_.cloneDeep(this.cellArr[blankCell.pos.y][blankCell.pos.x]));\r\n  while (openList.length > 0) {\r\n    let currentCell = openList.pop();\r\n    if (\r\n      currentCell.pos.x === targetCell.pos.x &&\r\n      currentCell.pos.y === targetCell.pos.y\r\n    ) {\r\n      break;\r\n    }\r\n\r\n    var x = currentCell.pos.x;\r\n    var y = currentCell.pos.y;\r\n    const dx = [0, 0, -1, 1];\r\n    const dy = [-1, 1, 0, 0];\r\n    var vx = 0;\r\n    var vy = 0;\r\n    for (let i = 0; i < 4; i++) {\r\n      vx = x + dx[i];\r\n      vy = y + dy[i];\r\n      if (\r\n        this.isValid(this.size, this.size, vy, vx) &&\r\n        !_.isEqual(currentCell.back, this.cellArr[vy][vx].pos) &&\r\n        !_.includes(ignore, this.cellArr[vy][vx].number) &&\r\n        !this.cellArr[vy][vx].solved &&\r\n        !_.isEqual(numberCell.pos, { x: vx, y: vy }) &&\r\n        this.cellArr[vy][vx].f > currentCell.f + 1\r\n      ) {\r\n        this.cellArr[vy][vx].f = currentCell.f + 1;\r\n        this.cellArr[vy][vx].back = _.cloneDeep(currentCell.pos);\r\n        openList.push(_.cloneDeep(this.cellArr[vy][vx]));\r\n        openList.sort((a, b) => {\r\n          return a.f - b.f;\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n  var result = [];\r\n  targetCell = _.cloneDeep(this.cellArr[targetCell.pos.y][targetCell.pos.x]);\r\n  do {\r\n    result.push(targetCell);\r\n    if (\r\n      this.isValid(this.size, this.size, targetCell.back.y, targetCell.back.x)\r\n    ) {\r\n      targetCell = _.cloneDeep(\r\n        this.cellArr[targetCell.back.y][targetCell.back.x]\r\n      );\r\n    }\r\n  } while (targetCell.back.x !== -1 || targetCell.back.y !== -1);\r\n\r\n  for (let i = 0; i < this.size; i++) {\r\n    for (let j = 0; j < this.size; j++) {\r\n      this.cellArr[i][j].back = { x: -1, y: -1 };\r\n      this.cellArr[i][j].f = Number.MAX_SAFE_INTEGER;\r\n    }\r\n  }\r\n  result.reverse();\r\n  return result;\r\n};\r\n\r\nSlidingPuzzleSolver.prototype.swapNumber = function (x1, y1, x2, y2) {\r\n  if (x1 === x2 && y1 === y2) return;\r\n\r\n  this.arr[y1][x1] += this.arr[y2][x2];\r\n  this.arr[y2][x2] = this.arr[y1][x1] - this.arr[y2][x2];\r\n  this.arr[y1][x1] -= this.arr[y2][x2];\r\n\r\n  this.cellArr[y1][x1].number += this.cellArr[y2][x2].number;\r\n  this.cellArr[y2][x2].number =\r\n    this.cellArr[y1][x1].number - this.cellArr[y2][x2].number;\r\n  this.cellArr[y1][x1].number -= this.cellArr[y2][x2].number;\r\n\r\n  this.history.push({ squares: _.cloneDeep(this.arr) });\r\n};\r\n","import \"../index.css\";\nimport React from \"react\";\nimport Board from \"./Board\";\nimport _ from \"lodash\";\nimport { SlidingPuzzleSolver } from \"./SlidingPuzzleSolver\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    const col = Array(3).fill(null);\n\n    this.state = {\n      history: [\n        {\n          squares: Array(3)\n            .fill(null)\n            .map(() => col.slice()),\n        },\n      ],\n      solvedArr: Array(3).fill(null),\n      size: 3,\n      stepNumber: 0,\n      counter: 0,\n      interval: null,\n      temp: 0,\n    };\n    // this.swap = this.swap.bind(this);\n    this.shuffle = this.shuffle.bind(this);\n    this.solvePuzzle = this.solvePuzzle.bind(this);\n  }\n\n  componentDidMount() {\n    this.shuffle();\n    this.prepareSolved(this.state.size);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.interval);\n  }\n\n  jumpTo(step) {\n    if (step > this.state.history.length - 1)\n      step = this.state.history.length - 1;\n    if (step < 0) step = 0;\n    this.setState({\n      stepNumber: step,\n      temp: step,\n    });\n  }\n\n  prepareSolved(size) {\n    var solvedArr = new Array(size).fill(null);\n    var number = 1;\n    for (var i = 0; i < size; i++) {\n      solvedArr[i] = new Array(size).fill(null);\n      for (var j = 0; j < size; j++) {\n        solvedArr[i][j] = number;\n        number++;\n      }\n    }\n    solvedArr[size - 1][size - 1] = 0;\n    this.setState({ solvedArr: _.cloneDeep(solvedArr) });\n    return solvedArr;\n  }\n\n  solved(arr) {\n    if (_.isEqual(this.state.solvedArr, arr)) {\n      return true;\n    }\n    return false;\n  }\n\n  swap(row, col) {\n    const step = this.state.stepNumber;\n    const history = this.state.history.slice(0, step + 1);\n    const current = history[step];\n    const size = this.state.size;\n    const arr = _.cloneDeep(current.squares.slice());\n    let hole = {\n      x: -1,\n      y: -1,\n    };\n\n    //find the hole\n    for (var i = 0; i < arr.length; i++) {\n      for (var j = 0; j < arr.length; j++) {\n        if (arr[i][j] === 0) {\n          hole = {\n            x: j,\n            y: i,\n          };\n        }\n      }\n    }\n\n    //check if selected is beside hole\n    if (Math.abs(hole.y - row) + Math.abs(hole.x - col) !== 1) {\n      return;\n    }\n\n    //simple swap the number\n    const temp = arr[hole.y][hole.x];\n    arr[hole.y][hole.x] = arr[row][col];\n    arr[row][col] = temp;\n\n    var newarr = Array(size)\n      .fill(0)\n      .map(() => new Array(size).fill(0));\n    for (i = 0; i < size; i++) {\n      for (j = 0; j < size; j++) {\n        newarr[i][j] = _.clone(arr[i][j]);\n      }\n    }\n\n    //save state\n    this.setState({\n      history: history.concat({ squares: arr }),\n      stepNumber: step + 1,\n      temp: step + 1,\n    });\n  }\n\n  shuffle() {\n    const size = this.state.size;\n    let numbers = _.range(0, size * size);\n    //check if puzzle is solveable with inversions\n    let invCount = 0;\n    while (invCount === 0 || invCount % 2 === 1) {\n      invCount = 0;\n      numbers = _.shuffle(numbers);\n      for (let i = 0; i < numbers.length; i++) {\n        for (let j = i + 1; j < numbers.length; j++) {\n          if (numbers[i] !== 0 && numbers[j] !== 0 && numbers[i] > numbers[j]) {\n            invCount++;\n          }\n        }\n      }\n    }\n\n    var arr = Array(size)\n      .fill(0)\n      .map((row) => new Array(size).fill(0));\n    let n = 0;\n    for (var i = 0; i < size; i++) {\n      for (var j = 0; j < size; j++) {\n        arr[i][j] = numbers[n];\n        n++;\n      }\n    }\n\n    //constant delete this\n    // arr[0][0] = 4;\n    // arr[0][1] = 6;\n    // arr[0][2] = 5;\n    // arr[1][0] = 7;\n    // arr[1][1] = 3;\n    // arr[1][2] = 2;\n    // arr[2][0] = 0;\n    // arr[2][1] = 1;\n    // arr[2][2] = 8;\n\n    this.setState({\n      history: [{ squares: _.cloneDeep(arr) }],\n      stepNumber: 0,\n      temp: 0,\n    });\n  }\n\n  solvePuzzle(arr, size, history) {\n    var solve = new SlidingPuzzleSolver(arr, size, history);\n    var h = solve.solve();\n    this.setState({\n      history: h,\n    });\n    console.log(\"solved\");\n\n    this.interval = setInterval(() => {\n      if (this.state.stepNumber < this.state.history.length - 1) {\n        this.jumpTo(this.state.stepNumber + 1);\n      } else clearInterval(this.state.interval);\n    }, 300);\n    this.setState({ interval: this.interval });\n  }\n\n  handleStepNumberInput(e) {\n    this.setState({ temp: e.target.value });\n    if (e.key === \"Enter\") {\n      if (\n        e.target.value >= 0 &&\n        e.target.value < this.state.history.length - 1\n      ) {\n        this.jumpTo(this.state.temp);\n      } else {\n        this.setState({ temp: this.state.stepNumber });\n      }\n    }\n  }\n\n  render() {\n    const step = this.state.stepNumber;\n    const history = this.state.history.slice(0, step + 1);\n    const current = history[step];\n    const size = this.state.size;\n    var button = (\n      <button\n        onClick={() =>\n          this.solvePuzzle(history[history.length - 1].squares, size, history)\n        }\n      >\n        solve\n      </button>\n    );\n    if (this.solved(current.squares)) {\n      button = <button onClick={this.shuffle}>restart</button>;\n    }\n\n    const moves = (step) => {\n      return (\n        <div>\n          <div>\n            <button onClick={() => this.jumpTo(step - 1)}>prev</button>\n\n            <input\n              type=\"text\"\n              className=\"lbl\"\n              value={this.state.temp}\n              onChange={(e) => this.handleStepNumberInput(e)}\n              onKeyPress={(e) => this.handleStepNumberInput(e)}\n            ></input>\n\n            <button onClick={() => this.jumpTo(step + 1)}>next</button>\n          </div>\n        </div>\n      );\n    };\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            size={size}\n            squares={current.squares}\n            onClick={(i, j) => this.swap(i, j)}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{button}</div>\n          <div>{moves(step)}</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}